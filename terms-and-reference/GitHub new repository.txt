

Разберем каждую часть страницы, которую вы получаете сразу после создания нового репозитория на GitHub:

1. Quick setup — if you’ve done this kind of thing before
Эта секция предназначена для тех, кто уже знаком с Git и GitHub. Она предлагает несколько вариантов для начала работы с новым репозиторием.

2. URL репозитория (используются реальные данные для этого репозитория sfdchub.git на моем аккаунте Tr-Sr)
Code
    https://github.com/Tr-Sr/sfdchub.git

Это URL вашего нового репозитория на GitHub. Вы будете использовать его для подключения вашего локального репозитория к удаленному репозиторию на GitHub.

3. Рекомендации по созданию файлов

Get started by creating a new file or uploading an existing file. We recommend every repository include a README, LICENSE, and .gitignore.
GitHub рекомендует вам создать или загрузить файлы в ваш репозиторий. Рекомендуется включить следующие файлы:

README: Файл, который содержит информацию о вашем проекте, его назначении и инструкции по использованию.
LICENSE: Файл, который определяет условия лицензирования вашего проекта.
.gitignore: Файл, который указывает Git, какие файлы или папки следует игнорировать (например, временные файлы, скомпилированные файлы и т.д.).

4. Создание нового репозитория на командной строке
…or create a new repository on the command line
Code

    echo "# sfdchub" >> README.md
    git init
    git add README.md
    git commit -m "first commit"
    git branch -M main
    git remote add origin https://github.com/Tr-Sr/sfdchub.git
    git push -u origin main

    Разбор:
Эти команды показывают, как создать новый репозиторий на вашем локальном компьютере и связать его с удаленным репозиторием на GitHub.

echo "# sfdchub" >> README.md: Создает файл README.md и добавляет в него заголовок # sfdchub.
git init: Инициализирует новый локальный репозиторий Git в текущей директории.
git add README.md: Добавляет файл README.md в индекс (staging area), чтобы он был готов к коммиту.
git commit -m "first commit": Создает коммит с сообщением "first commit", фиксируя изменения в локальном репозитории.
git branch -M main: Переименовывает текущую ветку в main. Это важно, так как GitHub по умолчанию использует main как основную ветку.
git remote add origin https://github.com/Tr-Sr/sfdchub.git: Добавляет удаленный репозиторий с именем origin, указывая на URL вашего репозитория на GitHub.
git push -u origin main: Отправляет (пушит) ваши изменения в удаленный репозиторий на GitHub и устанавливает origin/main как upstream-ветку для вашей локальной ветки main.

5. Пуш существующего репозитория с командной строки
…or push an existing repository from the command line
Code

    git remote add origin https://github.com/Tr-Sr/sfdchub.git
    git branch -M main
    git push -u origin main

    Разбор:
Эти команды предназначены для тех, кто уже имеет существующий локальный репозиторий и хочет связать его с новым репозиторием на GitHub.

git remote add origin https://github.com/Tr-Sr/sfdchub.git: Добавляет удаленный репозиторий с именем origin.
git branch -M main: Переименовывает текущую ветку в main.
git push -u origin main: Отправляет изменения в удаленный репозиторий на GitHub и устанавливает origin/main как upstream-ветку.

    Заключение
Эта страница предоставляет вам инструкции по созданию нового репозитория на GitHub и связыванию его с вашим локальным репозиторием. Вы можете выбрать один из предложенных способов в зависимости от того, создаете ли вы новый проект или пушите существующий.

ОБЩИЕ РЕКОМЕНДАЦИИ ЕЩЕ РАЗ:

Добавить файлы через веб интерфейс:
Чтобы добавить файлы в новый репозиторий на GitHub через браузер, следуйте этим шагам:

    1.	Откройте браузер и перейдите на сайт GitHub.
    2.	Войдите в свой аккаунт.
    3.	Нажмите на ваш профиль в верхнем правом углу и выберите "Your repositories".
    4.	Найдите ваш репозиторий и нажмите на него.
    5.	Нажмите на "Code" в верхнем меню.
    6.	Нажмите на "Upload an existing project to create a repository from it".
    7.	Выберите папку с файлами, которые вы хотите добавить, и нажмите "Upload".
    8.	Дождитесь окончания загрузки файлов.
    9.  Обновите страницу :))

Теперь ваши файлы добавлены в репозиторий на GitHub.

Как запушить проект через систему контроля версий Git на GitHub?
Cледуйте этим шагам:

    1.	Установите Git на свою компьютерную систему, если вы еще не сделали этого.
    2.	Откройте терминал или командную строку: git version  должно появиться что-то вроде: git version 2.45.2.windows.1
    3.	Убедитесь, что стоите в корневой папке проекта.
    4.	Введите команду git init, чтобы инициализировать новый репозиторий Git.
    5.	Добавьте файлы, которые вы хотите добавить в репозиторий, с помощью команды git add.
    6.	Проверьте через git status
    7.	Создайте новый коммит с помощью команды git commit -m "Сообщение о коммите", где "Сообщение о коммите" - это краткое описание изменений, которые вы внесли в файлы.
    8.	Создайте новый репозиторий на GitHub.
    9.	Добавьте удаленный репозиторий с помощью команды git remote add origin https://github.com/username/repository.git, где username и repository - это ваше имя пользователя и название репозитория на GitHub.
    10.	Отправьте ваши изменения на удаленный репозиторий с помощью команды git push -u origin master.

Теперь, господа синьоры, ваши файлы добавлены в репозиторий на GitHub.